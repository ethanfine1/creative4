{"remainingRequest":"/Users/ethanfine/reading-list/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ethanfine/reading-list/front-end/src/views/Toread.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ethanfine/reading-list/front-end/src/views/Toread.vue","mtime":1607656753920},{"path":"/Users/ethanfine/reading-list/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethanfine/reading-list/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ethanfine/reading-list/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethanfine/reading-list/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaG9tZScsCiAgZGF0YSgpIHsKICAgIHJldHVybnsKICAgIHRvUmVhZDogW10sCiAgICBzdWdnZXN0aW9uczogW10KICAgIH0KICB9LAogIGNyZWF0ZWQoKXsKICAgIHRoaXMudG9wQm9va3MoKTsKICAgIHRoaXMuZ2V0U3VnZ2VzdGlvbnMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGRlbGV0ZUl0ZW0ocmVjKSB7CiAgICAgIGF3YWl0IGF4aW9zLmRlbGV0ZSgiL2FwaS9yZWNvbW1lbmRhdGlvbnMvIiArIHJlYy5faWQpOwogICAgfQogICAgYXN5bmMgdG9wQm9va3MoKSB7CiAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgiL2FwaS90b1JlYWQiKTsKICAgICAgdGhpcy50b1JlYWQgPSByZXNwb25zZS5kYXRhOwogICAgfSwKICAgIGFzeW5jIGdldFN1Z2dlc3Rpb25zKCkgewogICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoIi9hcGkvcmVjb21tZW5kYXRpb25zIik7CiAgICAgIHRoaXMuc3VnZ2VzdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfQogIH0KfQo="},{"version":3,"sources":["Toread.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Toread.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"big\">\n<div>\n<h1>To Read</h1>\n<hr>\n<div class=\"wrapper\">\n  <div class=\"books\">\n    <div class=\"book\" v-for=\"book in toRead\" :key=\"book.id\">\n    <div class = \"singleBook\">\n      <p class=\"title\">{{book.title}}<p>\n        <p class = \"author\">{{book.author}}</p>\n      <div class=\"image\">\n        <img :src=\"book.path\">\n      </div>\n      <p class=\"review\">{{book.review}}</p>\n    </div>\n    </div>\n  </div>\n</div>\n</div>\n<h1 style=\"background:white\">Fan Favorites!</h1>\n<hr>\n<div class=\"wrapper1\">\n<div class = \"all\">\n<div v-for=\"suggestion in suggestions\" v-bind:key=\"suggestion.id\">\n  <div class=\"suggestion\">\n      <p class=\"title\">{{suggestion.title}}</p>\n      <p class = \"author\">{{suggestion.author}}</p>\n      <p class = \"reasoning\">{{suggestion.description}}</p>\n      <button @click=\"deleteItem(suggestion)\">Delete</button>\n  </div>\n</div>\n</div>\n</div>\n</div>\n</template>\n\n<style>\n,big {\n  background: white;\n}\n.wrapper1 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: white;\n}\n  .title{\n    margin: 0;\n    font-size: 40px;\n  }\n  .author {\n    margin-top: 0;\n    font-size: 30px;\n  }\n  .reasoning {\n    font-size: 25px;\n  }\n\n  .all{\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n\n  .suggestion {\n    border: 3px solid;\n    width: 400px;\n  }\n</style>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'home',\n  data() {\n    return{\n    toRead: [],\n    suggestions: []\n    }\n  },\n  created(){\n    this.topBooks();\n    this.getSuggestions();\n  },\n  methods: {\n    async deleteItem(rec) {\n      await axios.delete(\"/api/recommendations/\" + rec._id);\n    }\n    async topBooks() {\n      let response = await axios.get(\"/api/toRead\");\n      this.toRead = response.data;\n    },\n    async getSuggestions() {\n      let response = await axios.get(\"/api/recommendations\");\n      this.suggestions = response.data;\n    }\n  }\n}\n</script>\n"]}]}